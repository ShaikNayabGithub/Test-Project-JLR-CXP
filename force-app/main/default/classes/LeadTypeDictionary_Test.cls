@isTest(SeeAllData=true)
private class LeadTypeDictionary_Test {
	/*@isTest
    static void FromRequestType_ReturnsBrochure_Request_GivenBR() {
        string result = LeadTypeDictionary.FromRequestType('BR');
        
        id recordTypeId = [Select Id From RecordType  Where SobjectType = 'Lead' and DeveloperName = 'Brochure_Request' and IsActive = true].Id;
        System.assertEquals(recordTypeId, result);
    }
    
    @isTest
    static void FromRequestType_ReturnsGeneric_GivenER() {
        string result = LeadTypeDictionary.FromRequestType('ER');
        
        id recordTypeId = [Select Id From RecordType  Where SobjectType = 'Lead' and DeveloperName = 'Generic' and IsActive = true].Id;
        System.assertEquals(recordTypeId, result);
    }
    
    @isTest
    static void FromRequestType_ReturnsKMI_GivenKMI() {
        string result = LeadTypeDictionary.FromRequestType('KMI');
        
        id recordTypeId = [Select Id From RecordType  Where SobjectType = 'Lead' and DeveloperName = 'KMI' and IsActive = true].Id;
        System.assertEquals(recordTypeId, result);
    }
    
    @isTest
    static void FromRequestType_ReturnsRetailer_Contact_GivenDC() {
        string result = LeadTypeDictionary.FromRequestType('DC');
        
        id recordTypeId = [Select Id From RecordType  Where SobjectType = 'Lead' and DeveloperName = 'Generic' and IsActive = true].Id;
        System.assertEquals(recordTypeId, result);
    }
    
    @isTest
    static void FromRequestType_ReturnsTest_Drive_Request_GivenTD() {
        string result = LeadTypeDictionary.FromRequestType('TD');
        
        id recordTypeId = [Select Id From RecordType  Where SobjectType = 'Lead' and DeveloperName = 'Test_Drive_Request' and IsActive = true].Id;
        System.assertEquals(recordTypeId, result);
    }*/
}